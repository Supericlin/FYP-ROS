@startuml Voice Command Navigation Sequence Diagram

!theme plain
skinparam sequenceArrowThickness 2
skinparam roundcorner 20
skinparam maxmessagesize 60

title Voice Command Navigation - Sequence Diagram

actor User as U
participant "Mobile App" as MA
participant "AI Agent\n(ESP32-S3)" as AI
participant "MQTT Broker" as MQTT
participant "ROS2 Navigation\nNode" as ROS
participant "Nav2 Stack" as NAV
participant "Robot" as R

== Mobile App Voice Command Flow ==

U -> MA: Tap voice input button
activate MA

MA -> MA: Start speech recognition
MA -> U: "Say a destination..."

U -> MA: Speak destination\n(e.g., "Go to McDonald's")
activate U

MA -> MA: Process voice input
MA -> MA: Match to predefined location

alt Voice recognition successful
    MA -> MQTT: Publish "mcdonald" to robot/control
    activate MQTT
    
    MQTT -> ROS: Forward command
    activate ROS
    
    ROS -> ROS: Validate location
    ROS -> NAV: Send navigation goal
    activate NAV
    
    NAV -> R: Execute path planning
    activate R
    
    R -> NAV: Navigation started
    NAV -> ROS: Goal accepted
    ROS -> MQTT: Publish status update
    MQTT -> MA: Forward status
    MA -> U: Display "Navigating to McDonald's"
    
    R -> NAV: Navigation progress
    NAV -> ROS: Status update
    ROS -> MQTT: Publish progress
    MQTT -> MA: Forward progress
    MA -> U: Update progress indicator
    
    R -> NAV: Destination reached
    NAV -> ROS: Goal completed
    ROS -> MQTT: Publish "goalReached"
    MQTT -> MA: Forward completion
    MA -> U: Show "Destination reached!"
    
    deactivate R
    deactivate NAV
    deactivate ROS
    deactivate MQTT
    
else Voice recognition failed
    MA -> U: Show manual selection dialog
    U -> MA: Select location manually
    MA -> MQTT: Publish selected location
    note right: Continue with navigation flow
end

deactivate MA
deactivate U

== AI Agent Voice Command Flow ==

U -> AI: Speak Chinese command\n(e.g., "去書房")
activate U
activate AI

AI -> AI: Process Chinese voice input
AI -> AI: Translate to English command

AI -> MQTT: Publish "studyroom" to robot/control
activate MQTT

MQTT -> ROS: Forward command
activate ROS

ROS -> ROS: Validate location
ROS -> NAV: Send navigation goal
activate NAV

NAV -> R: Execute path planning
activate R

R -> NAV: Navigation started
NAV -> ROS: Goal accepted
ROS -> MQTT: Publish status update
MQTT -> AI: Forward status
AI -> U: Play audio confirmation

R -> NAV: Navigation progress
NAV -> ROS: Status update
ROS -> MQTT: Publish progress
MQTT -> AI: Forward progress
AI -> U: Provide audio feedback

R -> NAV: Destination reached
NAV -> ROS: Goal completed
ROS -> MQTT: Publish "goalReached"
MQTT -> AI: Forward completion
AI -> U: Play success sound
AI -> AI: Trigger wake word for next interaction

deactivate R
deactivate NAV
deactivate ROS
deactivate MQTT
deactivate AI
deactivate U

== Navigation Control Flow ==

U -> MA: "Stop navigation"
activate U
activate MA

MA -> MQTT: Publish "navStop" to robot/control
activate MQTT

MQTT -> ROS: Forward stop command
activate ROS

ROS -> NAV: Cancel current navigation
activate NAV

NAV -> R: Stop movement
activate R

R -> NAV: Navigation stopped
NAV -> ROS: Goal cancelled
ROS -> MQTT: Publish stop confirmation
MQTT -> MA: Forward confirmation
MA -> U: Display "Navigation stopped"

deactivate R
deactivate NAV
deactivate ROS
deactivate MQTT
deactivate MA
deactivate U

@enduml 